<div id="messages"></div>

<script>
    // בשביל שיוצג יותר יפה מעצבים רק את החלק שלמעלה

    let username; // משתנה גלובלי לשם המשתמש

    // פונקציה להסתיר את ההודעה אחרי 5 שניות
    function hideMessage(messageElement) {
        setTimeout(() => {
            messageElement.style.display = 'none';
        }, 5000);
    }

    // שליחת בקשה לשרת לקבלת שם המשתמש
    fetch('/session-info')
        .then(response => {
            if (!response.ok) {
                throw new Error('Not logged in');
            }
            return response.json(); // הפיכת התגובה לאובייקט JSON
        })
        .then(data => {
            username = data.username; // שמירת שם המשתמש במשתנה גלובלי
            const ws = new WebSocket('ws://' + window.location.host);

            ws.addEventListener('open', () => {
                ws.send(username); // שליחת שם המשתמש ל-WebSocket
            });

            ws.addEventListener('message', (event) => {
                const data = JSON.parse(event.data);
                const messagesList = document.getElementById('messages');
                
                messagesList.innerHTML = ''; // ניקוי הודעות קודמות

                if (data.hasNewMessage && data.messages && data.messages.length > 0) {
                    data.messages.forEach(message => {
                        const jsMsg = JSON.parse(message); // פירמוט הודעת JSON
                        
                        // יצירת אלמנט להצגת ההודעה
                        const messageElement = document.createElement('div');
                        messageElement.classList.add('message'); // הוספת מחלקה לעיצוב

                        messageElement.innerHTML = `
                            <div class="message-content">
                                <h5 class="fw-bolder">Message from: ${jsMsg.doctorName}</h5>
                                <p><strong>Date:</strong> ${new Date(jsMsg.date).toLocaleString()}</p>
                                <p><strong>Message:</strong> ${jsMsg.message}</p>
                            </div>
                        `;

                        messagesList.appendChild(messageElement);
                        hideMessage(messageElement); // הסתרת ההודעה אחרי 5 שניות
                    });
                }
            });
        })
        .catch(error => {
            console.error('Error fetching session info:', error);
        });
</script>


<!-- <div id="messages"></div>

<script>
// בשביל שיוצג יותר יפה מעצבים רק את החלק שלמעלה

let username; // משתנה גלובלי לשם המשתמש

// שליחת בקשה לשרת לקבלת שם המשתמש
fetch('/session-info')
    .then(response => {
        if (!response.ok) {
            throw new Error('Not logged in');
        }
        return response.json(); // הפיכת התגובה לאובייקט JSON
    })
    .then(data => {
        username = data.username; // שמירת שם המשתמש במשתנה גלובלי
        const ws = new WebSocket('ws://' + window.location.host);

        ws.addEventListener('open', () => {
            ws.send(username); // שליחת שם המשתמש ל-WebSocket
        });

        ws.addEventListener('message', (event) => {
            const data = JSON.parse(event.data);
            const messagesList = document.getElementById('messages');
            
            messagesList.innerHTML = ''; // ניקוי הודעות קודמות

            if (data.hasNewMessage && data.messages && data.messages.length > 0) {
                data.messages.forEach(message => {
                    const jsMsg = JSON.parse(message); // פירמוט הודעת JSON
                    
                    // יצירת אלמנט להצגת ההודעה
                    const p = document.createElement('div');
                    p.innerHTML = `
                        <h5 class="fw-bolder">Message from: ${jsMsg.doctorName}</h5>
                        <p><strong>Date:</strong> ${new Date(jsMsg.date).toLocaleString()}</p>
                        <p><strong>Message:</strong> ${jsMsg.message}</p>
                    `;
                    messagesList.appendChild(p);
                });
            }
        });
    })
    .catch(error => {
        console.error('Error fetching session info:', error);
    });
</script>

 -->
